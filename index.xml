<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nzooherd&#39;s blog</title>
    <link>http://nzooherd.github.io/</link>
    <description>Recent content on nzooherd&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Jan 2024 05:35:36 +0000</lastBuildDate>
    <atom:link href="http://nzooherd.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我在北京这七年(四)-故乡</title>
      <link>http://nzooherd.github.io/posts/%E6%88%91%E5%9C%A8%E5%8C%97%E4%BA%AC%E8%BF%99%E4%B8%83%E5%B9%B4%E5%9B%9B-%E6%95%85%E4%B9%A1/</link>
      <pubDate>Tue, 23 Jan 2024 05:35:36 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%88%91%E5%9C%A8%E5%8C%97%E4%BA%AC%E8%BF%99%E4%B8%83%E5%B9%B4%E5%9B%9B-%E6%95%85%E4%B9%A1/</guid>
      <description>太行山石巍巍而立，默默守护华北平原千载万载。山脚泜河日夜不息的从赵家庄旁掠过，东流入海。正当五月天时，河畔麦田绿地发亮，想来又是一个丰收之季。三两只孩童带着渔网，说说笑笑地穿越麦地向河谷而去，脚边水渠闪着微光，就那样静静流着… 我印象中的童年从这里开始。这片山水孕育着数不尽的生命与生活，可不知其中又有多少被永远禁锢在这山水中。&#xA;有时我会想起《在山的那边》，初中语文第一课。可惜少年不屑一顾，只会进入社会跌跌撞撞数年后的某个夜晚，突然想到漫漫求学路。&#xA;我在山里读得初中，物理意义上的山。那是一所封闭的寄宿制学校，三面环山，剩下一面正对马路，可实际上穿越马路，仍然是麦田、河谷、山。我依然记得美术课上，刚刚毕业的美女大学生带着我们穿过油菜花田，去干涸的河谷写生。我在队前紧跟着美术老师，情窦初开的年纪，看着那婀娜背影幻想着把老师压在身下…&#xA;当然那也是唯一一次写生，整个初中三年学生都有着相同且乏味的目的，考取县城高中公助生。为此要放弃尽可能的娱乐，待到初三，为给学生们压缩时间，我们住到了和教室同一楼的宿舍。说是宿舍，其实也只一间小屋，两层木板。屋子东西各有小窗，东侧小窗正对露天走廊，方便老师夜间查寝，西侧小窗望去，尽是茫茫太行。睡前和同学们插科打诨，成为仅剩的娱乐活动。然而谈到未来时，总会忽然寂静下来。大家谁都不语，静静想着自己的心事。野风掠过山谷，犹带呜咽之声，那是我印象中最冷的冬天。&#xA;冬去春来，花落花开。一节普通的晨读课上，年纪主任突然走进班来，把所有学生集合到一起，念出十多个同学的名字，我也包含在内。正当我疑惑有甚变化时，主任说道这些同学因为二模成绩优秀，已被高中提前录取，现在可以回家去了。我抬头望去，阳光洒净教室，窗外树影婆娑，麻雀喳喳而鸣。山丘依然像往常静静矗立，送走一届又一届学生。我还没来及告别，就那样糊涂得奔向未来。&#xA;多年以后，天坛公园闲逛时，偶然发现京城的少男少女们也在写生。看着他们画板上一个个精致的微缩天坛，不由想起那个春游的午后。可我们的画板上却什么都没有，大山里的孩子又会画什么呢。初中三年，我看过星斗漫天，也听过秋风瑟瑟，我闻过杏花绵延数十里，也行过公路大雪封山车流不通。 听着很美好，现实却是二十人挤在没卫生间的小屋内，气味令人作呕，不知多少夜晚，伴着风月和脚臭入睡。五点多时，负责当日卫生的同学，从宿舍到厕所穿过半个学校，手上拎着尿壶，抬头却是银河。学校每月放假一次，乡村客车是大多人的通勤方式。春分时节，客车沿着公路徐徐而行，左侧是村庄，右侧是河谷，而河谷那边还有漫山的杏花，无垠无边，如梦如幻。冬日则没有这么好运了，学校附近有处沟壑，积雪不化，客车行至最近的村庄后，只能下车踏雪而行。&#xA;苏轼说“惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，取之无禁，用之不竭。是造物者之无尽藏也，而吾与子之所共适。”可我初中三年，真是看够了清风与明月。我是如此得羡慕京城的少爷们，我想看摩天大楼，住进有暖气的宿舍，学两三门兴趣爱好，陪漂亮妹妹打情骂俏…或者，至少在我迷茫时有人可以给我点方向。如果当时，在山水和庙堂之间，不知苏轼又会如何选择。&#xA;苦难就是苦难，苦难不值得歌颂。&#xA;未完待续…</description>
    </item>
    <item>
      <title>金庸作品摘录</title>
      <link>http://nzooherd.github.io/posts/%E9%87%91%E5%BA%B8%E4%BD%9C%E5%93%81%E6%91%98%E5%BD%95/</link>
      <pubDate>Sat, 18 Mar 2023 23:18:55 +0900</pubDate>
      <guid>http://nzooherd.github.io/posts/%E9%87%91%E5%BA%B8%E4%BD%9C%E5%93%81%E6%91%98%E5%BD%95/</guid>
      <description>你瞧这些白云聚了又散，散了又聚，人生离合，亦复如斯。&#xA;溶溶月色下，剑光似水，人影如潮，此来彼去，更无已时。&#xA;惟见云生谷底，雾迷峰巅，天地茫茫，就只他杨过一人而已。&#xA;其时大雨初歇，晴空一碧，新月的银光洒在林木溪水之上。&#xA;杨过朗声说道：“今番良晤，豪兴不浅，他日江湖相逢，再当杯酒言欢。咱们就此别过。”&#xA;其时明月在天，清风吹叶，树巅乌鸦啊啊而鸣，郭襄再也忍耐不住，泪珠夺眶而出。正是：“秋风清，秋月明；落叶聚还散，寒鸦栖复惊。相思相见知何日，此时此夜难为情。&#xA;张三丰瞧著郭襄的遗书，眼前似乎又看到了那个明慧潇洒的少女，可是，那是一百年前的事了。&#xA;我天涯海角，行踪无定，自己也不知道到那里去。&#xA;君宝但觉天地茫茫，竟无安身之处。&#xA;荒山野岭之间，一个瘦骨棱棱的少年黯然南下，凄凄惶惶，说不尽的孤单寂寞。&#xA;花开花落，花落花开。少年子弟江湖老，红颜少女的鬓边终于也见到了白发。这一年是元顺帝至元二年，宋朝之亡至此已五十余年。&#xA;醒着的五人相对不语，各自想着自己的心事和身世，波涛轻轻打着小舟，只觉汪洋巨浸，万古常存，人生忧患，亦复如是。&#xA;张无忌不知说什么话好，呆立片刻，跃入对船。只听得小昭所乘的大舰上号角声呜呜响起，两船一齐扬帆，渐离渐远。但见小昭悄立船头，怔怔向张无忌的座船望着。两人之间的海面越拉越广，终于小昭的座舰成为一个黑点，终于海上一片漆黑，长风掠帆，犹带呜咽之声。&#xA;片刻之前还是一片扰攘的雪谷，终于寂静无声。中原群豪走了，花铁干走了，水笙走了。只剩下狄云一人。他抬起头来，连往日常在天空盘旋的兀鹰也没看见。真是寂寞，孤另另地。只有消融了的雪水轻轻的流出谷去。&#xA;他想：“我该走了！这件鸟羽衣服不必带去，待该办的事情办了，就回这雪谷来住。外面的人聪明得很，我不明白他们心里想些什么。这里谁也不会来，还是住在这里的好。&#xA;虚竹却不死心，运了好半晌北冥真气，父母两人却那里有半点动静？虚竹悲从中来，忍不住放声大哭。二十四年来，他一直以为自己是个无父无母的孤儿，从未领略过半分天伦之乐，今日刚找到生父生母，但不到一个时辰，便即双双惨亡。&#xA;蹄声响动，辽军千乘万骑又向北行。众将士不住回头，望向地下萧峰的尸体。只听得鸣声哇哇，一群鸿雁越过众军的头顶，从夹峙的双峰之间，从雁门关上空飞行向南。辽军渐去渐远，蹄声隐隐，又化作了山后的闷雷。&#xA;琴音似止未止之际，却有一二下极低极细的箫声在琴音旁响了起来。回旋婉转，箫声渐响，恰似吹箫人一面吹，一面慢慢走近。箫声清丽，忽高忽低，忽轻忽响，低到极处之际，几个盘旋之后，又再低沉下去，虽极低极细，每个音节仍清晰可闻。渐渐低音中偶有珠玉跳跃，清脆短促，此伏彼起，繁音渐增，先如鸣泉飞溅，继而如群卉争艳，花团锦簇，更夹着间关鸟语，彼鸣我和，渐渐的百鸟离去，春残花落，但闻雨声萧萧，一片凄凉肃杀之象，细雨绵绵，若有若无，终于万籁俱寂。&#xA;当晚韦小宝和双儿在总督府的卧房中就寝，炉火生得甚旺，狐被貂褥，一室皆春。&#xA;两人并肩坐在车中，望着湖水。令狐冲伸过右手，按在盈盈左手的手背上。盈盈的手微微一颤，却不缩回。令狐冲心想：“若得永远如此，不再见到武林中的腥风血雨，便叫我做神仙，也没这般快活。&#xA;自觉一生武功从未如此刻之高，却从未如此刻这般寂寞凄凉。他天生爱好热闹，喜友好酒，过去数月受囚于地牢，孤身一人那是当然之理。此刻身得自由，却仍是孤另另地。独立溪畔，欢喜之情渐消，清风拂体，冷月照影，心中惆怅无限。&#xA;伯爵大人从不执笔写字，那亲随心中纳罕，脸上钦佩，当下抖擞精神，在一方王羲之当年所用的蟠龙紫石古砚中加上清水，取过一锭褚遂良用剩的唐朝松烟香墨，安腕运指，屏息凝气，磨了一砚浓墨，再从笔筒中取出一枝赵孟俯定造的湖州银镶斑竹极品羊毫笔，铺开了一张宋徽宗敕制的金花玉版笺，点起了一炉卫夫人写字时所焚的龙脑温麝香，恭候伯爵大人挥毫。这架子摆将出来，有分教：钟王欧褚颜柳赵, 皆惭难比韦小宝。韦小宝掌成虎爪之形，指运擒拿之力，一把抓起笔杆，饱饱的蘸上了墨，忽地啪的一声轻响，一大滴墨汁从笔尖上掉将下来，落在纸上，登时将一张金花玉版笺玷污了。</description>
    </item>
    <item>
      <title>About</title>
      <link>http://nzooherd.github.io/about/</link>
      <pubDate>Wed, 18 Jan 2023 08:10:56 +0800</pubDate>
      <guid>http://nzooherd.github.io/about/</guid>
      <description>有人说“你的气质里，藏着你读过的书，走过的路，见过的景，还有那爱过的人。”&#xA;所以，如果你想了解我是什么样的人，可以阅读下面的文章。&#xA;饺子 捉猫 再读《斗破苍穹》 未完待续&amp;hellip; 当然，也可以关注我的 Twitter，我会在这里发一些无病呻吟的内容。</description>
    </item>
    <item>
      <title>《深度学习》读书笔记(一)</title>
      <link>http://nzooherd.github.io/posts/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B8%80/</link>
      <pubDate>Sun, 15 Jan 2023 02:34:10 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E4%B8%80/</guid>
      <description>最近在读“花书”《Deep learning》，然而第一部分“应用数学与机器学习基础”就异常吃力。一方面高数等基础我大三开始就不再应用，另一方面这部分写得着实简陋，数学公式的证明充斥着大量的“不难得出，可以看到，因此可证…”。让我一个高考数学 145 的人常常怀疑自己的智商。&#xA;梯度负方向下降最快 每一篇介绍梯度下降的文章，几乎都会告诉你“梯度负方向下降最快”，但却不告诉你为什么。 而当你谷歌时，中文互联网上的资料大都是这两篇文章复制粘贴：&#xA;为什么梯度反方向是函数值局部下降最快的方向？ 为什么梯度的负方向是局部下降最快的方向？ 然而，就在《Deep Learning》这本书的 4.3 章节，用短短 10 行向读者敷衍得证明了下为什么。敷衍到我为了看懂查了一天资料…&#xA;先列一些定义:&#xA;偏导数 \(\frac{\partial}{\partial x_i}f(x)\) 衡量点 \(x\) 处对 \(x_i\) 的变化率。 梯度是相对一个向量求导的导数， \(f\) 的导数是包含所有偏导数的向量，记为 \(\nabla_xf(x)\)。 下降方向中的方向定义为 \(u\) (单位向量)。 \(u\) 方向的下降速度为 \(\frac{\partial}{\partial a}f(x+au)\) 在 a=0 时的值。 下面通过雅可比矩阵链式法则求导(向量求导不能直接应用链式法则): \[\frac{\partial{\boldsymbol{f(x+au)}}}{\partial{a}} = \frac{\partial \boldsymbol{f(x+au)}}{\partial{\boldsymbol{(x+au)}}}\frac{\partial{\boldsymbol{(x+au)}}}{\partial a} \]&#xA;注意这里是 \(\frac{\partial{\boldsymbol{f(x+au)}}}{\partial{a}}\) 而非 \(\frac{\partial{f(x+au)}}{\partial{a}}\)，等号左侧是粗体。&#xA;\(\frac{\partial{\boldsymbol{f}}}{\partial{\boldsymbol{x}}}, \frac{\partial{f}}{\partial{\boldsymbol{x}}}\) 是否相等需要结合分子分母的形态具体分析，以本题为例:&#xA;\(\frac{\partial{\boldsymbol{f(x+au)}}}{\partial{a}}\) 雅可比矩阵结果是 \(1 \times 1\)，而 \(\frac{\partial{f(x+au)}}{\partial{a}}\) 结果同样为 \(1\times 1\)，所以:&#xA;\[\frac{\partial{\boldsymbol{f(x+au)}}}{\partial{a}}=\frac{\partial{f(x+au)}}{\partial{a}}\]&#xA;假设 \(x \in R^n\), \(\frac{\partial \boldsymbol{f(x+au)}}{\partial{\boldsymbol{(x+au)}}}\) 雅可比矩阵结果是 \(1 \times n\)，而 \(\nabla_xf(x)a\) 通常记为 \(n \times 1\)，所以 \[\frac{\partial \boldsymbol{f(x+au)}}{\partial{\boldsymbol{(x+au)}}} ={\frac{\partial f(x+au)}{\partial{\boldsymbol{(x+au)}}}}^\intercal\]</description>
    </item>
    <item>
      <title>捉猫</title>
      <link>http://nzooherd.github.io/posts/%E6%8D%89%E7%8C%AB/</link>
      <pubDate>Sun, 25 Sep 2022 11:48:52 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%8D%89%E7%8C%AB/</guid>
      <description>我第一次碰到那两只小可爱是做核酸回来的路上，在小区楼下。 雨后的阳光很是温暖，它们抱在一起打滚。 过了几秒忽然意识到，不如给她们一个家。 走近几步，它们也看到了我，带着一丝好奇，更多的是恐慌。 我尝试伸手，果然，她们立刻钻进后面的两个洞中。 连忙低下身子，一一看去，一只已经不见，另一只在洞口徘徊。我再次伸手，这只也向深处跑去。 此时我打开手机照明，向洞内探去，仍然一片漆黑。光线没有着地点，无法反射入眼，这些洞很深。 我绕着楼转了一圈，发现有七八个类似的洞，应该是破旧的水道设施，年久失修，流浪猫们就在里面住下了。&#xA;空手而归，遂即归家，心里却愈发瘙痒难耐。&#xA;午后，我决定带着家里的原住民去碰碰运气，猫猫之间互相吸引也不无可能。 刚走到墙角，又看到那两只小猫抱在一起。 我从高处小心的探出头，尝试在它们发现我前先封住洞口。 心跳莫名其妙的开始加速，我觉得自己是桌前的赌徒。 桌上是数亿的筹码，而我正在揭开最后一张牌，赢了就可以拥有全世界。 果然，我总是低估了小野猫们的速度。 踪迹全无后，我给家中的原住民，一只三月大的英短，套上绳索，希望她进洞带小花猫出来。 没想到第一步就卡住了，天性胆小的猫猫，只敢在洞口张望。 我取出猫条，尽可能的抹在洞内深处。美食诱惑下，终于缓缓向洞内爬去。 大概只过了两分钟，我就听到猫猫愤怒时那种呲牙声。 心中一喜，忙向洞内看去，却是一只蓝白相间的成年猫。 紧跟着呲牙声的，可能就是电光火石间的流血厮杀。 不知苦苦追逐却终身不得和未曾珍惜而永远失去哪个更让人痛苦。 我将原住民放回到到包内。徒劳的等待着戈多。古时有守株待兔，今日有守株待猫，不，我连株都没有。&#xA;整个下午一无所获。 躺在床上的我，满脑子都是那两只小花猫，各处搜索捕捉流浪猫的方法。 先从淘宝下单两个捕猫笼，甚至考虑烟雾的可能性。 此时我才知道这种三花猫大概率是女孩子，并开始知乎三花猫的各种习性爱好&amp;hellip; 不知不觉，窗外雨声愈大，我却更加平静了。 又是一个安静的晚上，不知她们又会不会受凉。&#xA;翌日清晨，推开窗户，一宿风雨带走了大半的暑气。 我有些焦虑，不久，我就要离开这座城市了。 雨水渐停，我急不可耐的下楼查找猫猫的状况。 道路些许泥泞，希望她们不要逃离原本的家。 这次我带上了探照灯，尝试多个洞口后竟然发现了她们。 光照范围有限，隐约的看到她们趴在生锈的水道管上。 我摇动灯光，她们也看向了我。 然一望可相见，一步如重城。 我能做的也只有摇一摇手中的灯光。 还是回家吃饭的好。&#xA;饭罢，借着下楼扔垃圾的顺当又想着去碰碰运气。 上午发现猫猫的洞口已经不在了，我向深处走去。 绕过拐角，竟看到一只小三花在洞口张望。 其时清风吹叶，蝉鸣于耳，猫猫似也看到了我，又将脑袋缩入洞中。 她却没有跑。 来不及多想，借靠盲区，我紧贴墙壁蹑足过去。 我从洞口上方小心得探出头，避免和她有目光接触。她还在里面！ 接着把左手靠着墙移到洞口下方。 我也不知该怎么做，只是本能得想更靠近她，我有些恍惚，只剩下心跳声提醒着我要做什么。 她竟然转身了! 枪出如龙，我攥住了半个小腿，连忙把她拎出洞外，后面竟还跟着两只大猫。 我有些不知所措，感觉自己是个强抢民女的小丑，无意义得来回踱步。 终是狠下心来，拎着她向楼前走去，两只大猫仍跟在后面。 猫猫不停得叫着，防止被咬伤，我用塑料袋罩住了她的头，就这样拎着后腿直到楼房入口。 我回头看去，那两只大猫终还是跑了。 云聚云散，月圆月缺，人生离合，亦复如是。&#xA;到家后，首先把她关到笼子里，一阵嘶叫是免不了的。约莫半个时辰，终于安静下来。 我起身前往医院做检查，高尿酸已经折磨我几个月了。 虽没有任何症状，但这种类似达摩克里斯之剑的东西悬在头顶，每时想起总不免担惊受怕。 回来已经下午 6 点，我看着家里的原住民和新来的三花猫，忽然意识到得带她去体检。 连忙赶去宠物医院，虽然家中已有一猫，但我确是个养猫新手。 查了常规项目后，显示除有些贫血外都正常，略微宽心。 医生让我先回去，猫鼻支的结果凌晨才能出。 保险起见，我还是决定把她放到外面。和室友说明情况后，把笼子搬到了客厅。 11 点多，躺在床上翻来覆去，终于等来医院的阴性报告，可以做个好梦了。&#xA;第二天晨起，我去查看她的状况。 饮食尚可，大小便正常，也不再对我呲牙了。一切都在向好的方向发展。 由于昨晚叫的厉害，我把她关到阳台，防止影响室友休息。 阳台一米多高，我看着她跳了几次都差的远，便也放下心来。 如此过了两日，我感觉她的情绪有些低落，只是趴着，饮食却也正常。 这晚睡前我着实放心不下，带上激光灯去阳台陪她耍。 看着她追逐小红点，终于不小心跑到了我手心里，又被我一阵猛挼。 其时乌云遮星，凉风拂面，隐有惊雷之声，燥热难当的心情终于稍有缓解。 养猫最有成就感的时刻大概就是从最初的满满戒心，怒目而视到后来的露肚踩奶，相依相慰。我想，那一天应该不会太远。</description>
    </item>
    <item>
      <title>树状数组的证明</title>
      <link>http://nzooherd.github.io/posts/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%9A%84%E8%AF%81%E6%98%8E/</link>
      <pubDate>Fri, 11 Mar 2022 21:58:52 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%9A%84%E8%AF%81%E6%98%8E/</guid>
      <description>&lt;!DOCTYPE html&gt; &amp;#x6811;&amp;#x72B6;&amp;#x6570;&amp;#x7EC4;&amp;#x7684;&amp;#x8BC1;&amp;#x660E; 树状数组的证明 树状数组 和 线段树 是解决区间问题常用的两种数据结构。其中线段树理解起来相对简单，而树状数组的代码实现则更简洁。&#xA;参考例题: 区域和检索-数组可修改，就是一个标准的树状数组题。更抽象的应用场景可以理解为:&#xA;假设存在数组 aia_iai​， 存在操作 ⨀(ai,ai+1,ai+2,⋯ ,ai+k)\bigodot(a_i, a_{i+1}, a_{i+2}, \cdots, a_{i+k})⨀(ai​,ai+1​,ai+2​,⋯,ai+k​)，并且 ⨀(ai,ai+1,⋯ ,ai+k)=⨀(⨀(ai,ai+1,⋯ ,ai+j),⨀(ai+j+1,ai+j+2,⋯ ,ai+k))(1)\bigodot(a_i, a_{i+1}, \cdots, a_{i+k}) =\bigodot( \bigodot(a_i, a_{i+1}, \cdots, a_{i+j}), \bigodot(a_{i+j+1}, a_{i+j+2}, \cdots, a_{i+k}) )\tag{1} ⨀(ai​,ai+1​,⋯,ai+k​)=⨀(⨀(ai​,ai+1​,⋯,ai+j​),⨀(ai+j+1​,ai+j+2​,⋯,ai+k​))(1)&#xA;⨀(aj,⨀(ak))=⨀(aj,aK)(2)\bigodot(a_j, \bigodot(a_k)) = \bigodot(a_j, a_K) \tag{2} ⨀(aj​,⨀(ak​))=⨀(aj​,aK​)(2)&#xA;树状数组可以 O(log⁡n)O(\log{}n)O(logn) 的时间复杂度求出 ⨀(a1,a2,a3,⋯ ,ai)\bigodot(a_1, a_{2}, a_{3}, \cdots, a_{i})⨀(a1​,a2​,a3​,⋯,ai​)的值。 这里的 ⨀\bigodot⨀ 可以是 ∑\sum∑, 也可以是 ∏\prod∏，或者是任意其他满足上述等式的操作。 楼主从大一就已学习树状数组，但一直断断续续的用，断断续续的忘，每次使用时都要翻出模板代码来。&#xA;最近尝试手推了一下树状数组，记录于下。&#xA;假设原数组是 aia_iai​，树状数组利用 aia_iai​ 构建了新数组 bib_ibi​。&#xA;bi=⨀i−2k+1iaib_i = \bigodot_{i-2^k+1}^{i}a_i bi​=i−2k+1⨀i​ai​</description>
    </item>
    <item>
      <title>MinIO(一)纠删码</title>
      <link>http://nzooherd.github.io/posts/minio%E4%B8%80-%E7%BA%A0%E5%88%A0%E7%A0%81/</link>
      <pubDate>Sun, 30 Jan 2022 21:58:52 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/minio%E4%B8%80-%E7%BA%A0%E5%88%A0%E7%A0%81/</guid>
      <description>MinIO 是一个100% 开源的分布式对象存储系统，其主要开发者是 2014 年创建于硅谷的科技公司 MinIO Inc。&#xA;相较于阿里 OSS 底层依赖有巢和盘古，谷歌 GCS 底层依赖 Spanner 和 GFS(Colossus)，MinIO 则是一个完整的对象存储，真正做到了零依赖，单机部署只需要一个二进制可执行文件。从这个意义上看，MinIO 开源的不仅仅是对象系统，更核心的是开源了一个分布式存储系统。&#xA;那么 MinIO 相比业界常见的分布式系统又有哪些优劣，又能否给未来的设计带来一些启发？&#xA;本系列计划详细介绍 MinIO 的系统设计，此文是第一篇 「纠删码」。&#xA;Earsure Code 在存储领域, 最常见的防止数据丢失的方式就是备份。家用 NAS 可能直接上 RAID ，而大数据领域的 HDFS 会默认存双副本。 副本越多提供的数据可靠性也越强，也意味着空间利用率越低，要达到对象存储 11个9 的数据可靠性，通常需要 4 副本，如此计算，真正的利用率只有 25%。&#xA;纠删码则可以在提供和多副本相同的数据可靠性的同时，极大的提高空间利用率。在 03 年的 GFS 初版论文中，Google 就曾设想利用纠删码来存储，然而受限于当时的技术发展无法如愿。十多年过去了，当时遥不可及的技术，如今却频繁的用于某些大中厂自研的系统中，颇有 飞入寻常百姓家 的感触。&#xA;MinIO 使用纠删码 (Erasure Code) 来存储数据，下文简称为 EC。EC 将原始数据均分为 \(N\) 份，然后生成 \(M\) 份相同大小的 校验数据，在这 \((N+M)\) 份数据中任意丢失 \(M\) 份均可生成原始数据。 MinIO 确保这 \((N+M)\) 份数据分散在 \((N+M)\) 个不同的磁盘上，防止磁盘损毁导致数据丢失。常用的 \((N+M) = 8+4\)，提供比 4 副本更强的数据可靠性，同时空间利用率维持在 75%。</description>
    </item>
    <item>
      <title>风雨时有霾雾渐尽</title>
      <link>http://nzooherd.github.io/posts/%E9%A3%8E%E9%9B%A8%E6%97%B6%E6%9C%89/</link>
      <pubDate>Sat, 01 Jan 2022 12:19:02 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/%E9%A3%8E%E9%9B%A8%E6%97%B6%E6%9C%89/</guid>
      <description>年末将至，在各社交平台断断续续的看到年终总结，大同小异，不免显得些许无趣。&#xA;其中印象最深的是 V2ex 的一篇，一是总结时间实在过卷，12 月上旬就已过完一年。 二是因为先前的帖子对楼主印象深刻。 楼主尚未毕业，但字里行间透露的技术水平相当不错，比我优秀的多。 后生可畏，我的大学又做了些什么呢?&#xA;翻翻过往的博客，零散着一些东拼西凑的技术教程，穿插着两三篇杂文，剩下的就是强说愁的感悟了，实在是水了些。既然内容不够，总结来凑，年终总结还是能写则写吧，就当是记录些什么。&#xA;年初一场大病，被迫思考死亡。 住院第二天，一个人孤零零的站在检查室外的走廊中，四周望去尽是上年纪的老人，从未有过的孤独。 不是很懂为什么走廊的灯要开的如此昏暗，我竟无法看清半年后我是否仍会存在于这个世界。 七天之后，我出院了，窗外的天很蓝，却仍无法明确病因。 那是我今年睡的最舒服的七天，谢谢护士姐姐们的照顾，同时我也认真思考了一次体制内的可能性。&#xA;年中开始做正畸，中间各种请假跑医院，排了两个月终于带上了牙套。 现在已经接近一百天了，不适感远小于预期，也算是了结了人生的一项 TODO。 未来有一天，我可以在婚礼上自信的笑出来。&#xA;十一过后，万万没想到因为熬夜打游戏，患上结膜炎。 这种慢性病最重要的一点就是少看手机电脑，因此开始听博客，听小说&amp;hellip; 三个月来，病况时好时坏，各种纠结是否要辞职养病，焦虑将来是否要回家转行&amp;hellip;好在接近年末，基本已经痊愈。&#xA;自认一直有注意身体健康，但这一年仍被各种困饶，工作实在是疾病的源头，我终于下定决定逃离 996。&#xA;原计划21年年末时可以存七十万，可是现在左拼右拼仍然凑不出六十万&amp;hellip;我明明记得上年年年末时我就有五十万了&amp;hellip;&#xA;原有主要有三点&#xA;花销大幅增长。 翻了一下账本，21 年支出 16.5w，这个数字在上一年是 9.6w。 住房支出 6w，主要是因为交租日期挪动导致交了五次，其中一次应算作20年的开销。 正畸各种杂七杂八的费用交了 4w，22 年还有 1.5w 的尾款。 电器数码类支出 3.6w，今年购入无反+镜头，顶配 NUC + 64G 内存，电视机，Switch，装备基本算是凑齐了，明年除一个长焦镜头外无其他的心愿。 明年整体预算控制在 8w ，最低不超过 10w。&#xA;投资亏损。 股票方面全投了中概互联，恰逢玩期权，本金亏损 95%，总亏损约 6w。 支付宝基金收益约 1.3w，此外买了点 btc 和 eth，竟然没什么波动&amp;hellip;&#xA;收入不达预期。 今年后半年公司取消了加班，平均每月薪资降 4k，整年到手 34w，算上各种补贴股票年终奖，此外还有大概 7w 的公积金，稍低于预期，然而明年收入大抵不会超过这个树了。&#xA;工作上有两件出乎意料的事 1. 20年绩效还 0k, 2. 晋升。我只是一个每天摸鱼的小菜鸡啊，着实受宠若惊。在这家的体验比前东家好太多，然而不管怎样，已经计划了年后的跑路流程，感谢遇见。&#xA;今年又入坑了各种技术，区块链，量化交易，深度学习，Rust, 分布式存储。每个都浅尝辄止，希望好奇心千万不要再增加了，这几个方向已经够未来研究了。技术书认真读的只有一本《DDIA》，受益颇多。为了准备面试，看了不少系统设计题，此外又开始刷 Leetcode，面向简历编程。</description>
    </item>
    <item>
      <title>论装饰器的四种写法</title>
      <link>http://nzooherd.github.io/posts/%E8%AE%BA%E8%A3%85%E9%A5%B0%E5%99%A8%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%86%99%E6%B3%95/</link>
      <pubDate>Sat, 25 Dec 2021 12:34:52 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E8%AE%BA%E8%A3%85%E9%A5%B0%E5%99%A8%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%86%99%E6%B3%95/</guid>
      <description>面向切面编程在 Python 中一部分体现为装饰器。&#xA;由于 Python 中一切皆对象，装饰器的使用方法也因此多种多样，下文介绍装饰器的四种写法。&#xA;用函数装饰函数 def retry(func: Optional[Callable] = None, duration: timedelta = timedelta(seconds=2), limit: int = 10) -&amp;gt; Callable: if not func: return functools.partial(retry, duration=duration, limit=limit) @functools.wraps(func) def _func(*args, **kwargs): duration_seconds = duration.total_seconds() count = 1 while count &amp;lt;= limit: try: result = func(*args, **kwargs) return result except: count += 1 time.sleep(duration_seconds) continue return _func class TestRetry(unittest.TestCase): @staticmethod def generate_test_function(limit, retry_decorator): retry_count = [0] @retry_decorator(limit=5, duration=timedelta(seconds=0)) def my_test(): retry_count[0] += 1 if retry_count[0] &amp;lt; limit: raise Exception(&amp;#34;Test failed&amp;#34;) else: return retry_count return my_test def test_function_decoration(self): for i in range(100): exception_count = random.</description>
    </item>
    <item>
      <title>深入Http Read Timeout</title>
      <link>http://nzooherd.github.io/posts/%E6%B7%B1%E5%85%A5http-read-timeout/</link>
      <pubDate>Sat, 11 Dec 2021 13:43:08 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%B7%B1%E5%85%A5http-read-timeout/</guid>
      <description>海外的对象存储底层直接使用公有云，由于某些莫名其妙的原因，客户端不定期出现大量的 Read timed out 异常，部分异常栈如下。在和公有云的技术支持人员沟通过程中，我发现双方都不能很明确的指出到底是哪个环节超时了。&#xA;java.net.SocketTimeoutException: Read timed out at java.base/java.net.SocketInputStream.socketRead0(Native Method) ~[na:na] at java.base/java.net.SocketInputStream.socketRead(SocketInputStream.java:115) ~[na:na] at java.base/java.net.SocketInputStream.read(SocketInputStream.java:168) ~[na:na] at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140) ~[na:na] at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:478) ~[na:na] at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:472) ~[na:na] at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70) ~[na:na] at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1374) ~[na:na] at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:986) ~[na:na] at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137) ~[httpcore-4.4.13.jar!/:4.4.13] 众所周知，Http1.1 协议可以分成两个过程&#xA;客户端向服务端发送数据 客户端从服务端读取数据 所以 Http Read Timeout 的具体范围可能是指&#xA;上图 2-3 的时间 ? 上图 2-4 的时间 ? 上图 3-4 的时间 ? Tcp 层任意两个 Segment 的间隔时间 ? Tcp 层任意两个 Receive Segment 的间隔时间 ?</description>
    </item>
    <item>
      <title>再读《斗破苍穹》</title>
      <link>http://nzooherd.github.io/posts/%E5%86%8D%E8%AF%BB%E6%96%97%E7%A0%B4%E8%8B%8D%E7%A9%B9/</link>
      <pubDate>Sat, 13 Nov 2021 20:32:43 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/%E5%86%8D%E8%AF%BB%E6%96%97%E7%A0%B4%E8%8B%8D%E7%A9%B9/</guid>
      <description>我第一次读《斗破苍穹》是在高一，大学四年至少重读过一遍。没想到工作两年后，仍然会抽出闲暇翻阅这本烂俗小说。&#xA;应该是九年前，高中第一次月考结束，看着成绩单上不尽人意的排名，思绪渐渐飘远。 那时斗破刚读到萧炎结束加玛帝国的历练，动身前往迦南学院。 主角的家世并不出彩(至少在当时)，一个偏远帝国三线城市的没落贵族，放到学院的二代中甚至显得平庸，妥妥的“小镇青年”。&#xA;我初中就读于一所极度封闭的寄宿制学校，三面环山，门口是公路，最近的村子也是几里开外。 没有高科技的投影，没有丰富的社团，我的初中是那田里的油菜，散落的野栗，满山的杏花，睡十多人的大通铺，早起跑操的璀璨星辰，还有刚毕业的漂亮女教师。 现在再看些许无聊，可在当时我应该过得很舒坦。 在这里我是优秀的，成绩稳定前三，同学是从小玩到大的伙伴，老师是一个村的熟人，闭塞的小镇里我就是主角。&#xA;自认和萧炎有几分相似，镇子上的优秀少年，孤身一人去另一片天地闯荡，颇有一种风萧萧兮的气魄。 不同的是，萧炎单枪匹马从镇鬼关杀出，背影满是少年英气，迦南学院三年后王者归来。 而我则是带着老师们的期望荣誉毕业，进入另一所学府继续修行，但却一去不回。&#xA;高中之后，我才醒悟主角不是我。萧炎从岌岌无名到强榜第一，可能只用了几十章，我用尽高中三年也没有做到一次。 也曾仔细思考到底比萧炎差在哪里，后来我才明白，许多东西生下来没有，此生都不会有了。 灰色的高中生活，这本小说就是唯一的色彩。萧炎在斗气大陆打怪历练，我则在现实社会刷题升级。 幸运的是，三年未曾放弃过，初入学府时许多望尘莫及的同窗，高考结束后只能于身后寻找他们的身影。 录得一个中等985，也算配得上“小镇做题家”这个名号。至于大学，又是一个初中升高中的轮回罢了。&#xA;我非常讨厌“青春”这个词，理科生本就厌恶这些无法计算的虚像，但我想真实原因是我没有“青春”。 萧炎的修炼一途尽是红颜知己，艳遇过后女王大人以身相许，更有天之娇女不离不弃，真是满足了一个屌丝对于“爱情”的虚妄遐想。 我的高中也许是存在主角的，成绩年级第一，又高又帅，打得了篮球，上得了舞台。更重要的是，三年间对象换了一个又一个。 我时常在想，这是不是上帝和我开的玩笑，在我最需要鼓舞的时候送来一本励志小说，平移到现实却发现讲的是对手的故事，而我，则是在第二章领盒饭的反派。 青春是他们的，我什么也没有。 也不是什么都没有，梦里的数学题，做不完的五三&amp;hellip;就是我的青春，灰色的。&#xA;斗破中家人的羁绊是驱动剧情的主要因素， 开头纳兰嫣然大庭广众的退婚让萧家颜面无存，于是有了三年之约。 中期萧家灭门结下了和云岚宗的不共戴天之仇，于是有了复仇之旅。 故事后期主角一路奋斗则是为了救出药尘和父亲。 不夸张的说，萧炎的奋斗就是为了让萧家再次崛起。 萧炎做到了，故事的结局晋升斗帝，萧氏就是斗气大陆最显赫的家族。 曾几何时，我也想过有一天锦衣还乡，父母脸上一定满是欣慰。 现实永远不会按预想的发展，我不知道小说中是否有人会因为房子而发愁，但毕业后的我每一天想的都是去哪里搞钱凑首付。 我也曾试过努力争取，然而地上的头发和眼角的红血丝明明白白的告诉我再这样下去就是垮掉，我唯一的选择就是放下。 看着周围同龄人靠着父母的财产买房，我自认不差这些人，可贫瘠的家庭不仅无法给我些许帮助，甚至要靠我反哺方能维持。 萧炎一路走来，完全靠着自己实现萧家的复兴大业。 但我不是萧炎，我天分平庸，无法承担家族的期望，甚至仅仅是过好自己的生活就已经筋疲力竭。 我对家人也没有什么羁绊，如果可能的话，希望有一天可以逃离它。&#xA;《斗破苍穹》的剧情是大概就是扮猪吃虎，英雄救美，打怪升级，然后循环这个过程，一部充满屌丝气息的典型爽文。 我不懂喜剧与悲剧的定义，但我相信斗破一定属于喜剧。 故事中的女性各个天生丽质，全都为主角保留着处子之身。 整个世界被天然的划分为正邪两方，朋友的朋友一定是朋友，敌人的朋友一定是敌人。 没有求而不得，没有得而不惜，没有生离死别，甚至连遗憾都没有。 也许描写现实的故事就是悲剧，同现实相反的故事则是喜剧，斗破这样的小说注定不会被主流价值观认可。 我印象中奥斯卡获奖的大多是现实主义的悲剧作品，讽刺的是电影的导演，主演&amp;hellip;在现实生活却是世俗上的成功人士。 他们过着普通人无法想象的奢侈生活，却以普通人的故事为灵感创作，然后自己作评委教育普通人“看，什么才是优秀的作品”。 我真的看不进去《无依之地》，生活已经够苦了，为什么我还要在电影中再反刍一遍，抖M吗？ 斗破有许多缺点，但在我心中它很优秀。自强不息是整个故事最核心的内涵，我也一直在朝这个方向努力。&#xA;回到现实，我想说的是，当不再需要意淫《斗破》来给生活充电时，大概就过上我想要的生活了吧！</description>
    </item>
    <item>
      <title>熔断限流与隔板</title>
      <link>http://nzooherd.github.io/posts/%E7%86%94%E6%96%AD%E9%99%90%E6%B5%81%E4%B8%8E%E9%9A%94%E6%9D%BF/</link>
      <pubDate>Sat, 18 Sep 2021 12:57:11 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E7%86%94%E6%96%AD%E9%99%90%E6%B5%81%E4%B8%8E%E9%9A%94%E6%9D%BF/</guid>
      <description>熔断，限流与隔板 公司的对象存储服务上线至今仍没有限流模块。&#xA;8月份一次 CDN 事故中所有流量直接打到源站，导致 CPU 和内存使用率突增。 为防止服务雪崩， 紧急申请了一批资源才避免引发更大的事故。&#xA;于是9月份我就有了这个限流组件的 OKR。&#xA;动手之前，发现对微服务中的 熔断, 限流, 隔板 三者的理解有一定的误区，搜索一些资料记录于此。&#xA;熔断 - Circuite Breaker 问题背景&#xA;如果被调方由于某些问题挂掉，但是并没有从服务发现节点摘除。&#xA;主调方仍然会发起请求，虽然被调方已经无法提供服务，但由于超时时间的配置，主调不会立即失败。&#xA;如果在流量非常大的情况下，主调方会由于请求hang住占用大量资源，进而导致主调方挂掉。&#xA;解决方案&#xA;主调挂掉的原因是等待响应的请求占用了大量的资源。而熔断器的原理就是在发生此类情况时对于调用立即返回失败。&#xA;熔断器的一种实现方式是利用状态机，通过滑动窗口计算每个周期的状态，如下图。&#xA;适用场景&#xA;避免因为被调服务挂掉引起自身挂掉 限流 - Throttling 问题背景&#xA;客户端请求可能由于某些问题突发爆炸性增长，服务端压力陡增。&#xA;此时如果流量继续增长，很有可能导致服务挂掉，例如因为内存占用过大被操作系统kill等。&#xA;为避免发生此类场景，就需要对请求限流。&#xA;解决方案&#xA;限流的常用方式如下:&#xA;拒绝服务。对于某些请求直接返回失败 服务降级。停止提供低优先级功能，降低资源占用 使用负载均衡组件平滑请求量，例如消息队列等，常见于异步请求。 适用场景&#xA;保护自己避免因为流量突增雪崩 防止单一租户占用大量资源 隔板 - Bulkhead 问题背景&#xA;场景1: 主调方为了完成一个响应可能需要对多个背调方发起请求，假如一个被调方响应缓慢，请求堆积导致耗尽线程池，会引起大规模请求失败。&#xA;场景2: 被调方由于某个主调出现大量请求占用大量资源，导致无法对其他主调提供服务。&#xA;写到这里会发现，场景1和熔断的场景类似，而场景2就是限流的场景&amp;hellip;&#xA;基于此，隔板和熔断，限流并不是对立，而是对同一问题的不同考虑角度。&#xA;解决方案&#xA;在服务层面通常使用 隔离部署 的方式实现。&#xA;在单个进程内部，大多使用场景是池化隔离，如下图:&#xA;适用场景&#xA;隔离不同功能的资源消耗&#xA;客户优先级隔离&#xA;保护自己免于雪崩&#xA;参考链接 [1] Throttling pattern&#xA;[2] Bulkhead pattern</description>
    </item>
    <item>
      <title>饺子</title>
      <link>http://nzooherd.github.io/posts/%E9%A5%BA%E5%AD%90/</link>
      <pubDate>Thu, 16 Sep 2021 21:53:09 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/%E9%A5%BA%E5%AD%90/</guid>
      <description>小时候的我是极不喜欢吃饺子的，大人们却恰恰相反。&#xA;肉泥混杂着菜馅入嘴，不同食材的发酵产生美味，大脑却再也无法分辨出嘴中的是什么。 兴许是基因，禁食不可明辨的食物总是安全的。但更多的可能是潜意识中，“我这种干净的人怎么能吃如此肮脏的食物”。 写到这里才想起小时候讨厌的不仅是饺子，而是一切馅类。我最喜欢吃米饭和土豆，都是“干净”的食材。&#xA;馅类食物凹凸不平的表面，很容易让人联想到恶心的事物。相反，平滑的外观，如顶级的丝绸抱枕，又如少女水润般的肌肤，就是“干净”的。 如肉丸子一般，需要做成馅来增鲜的食物就是为下等人创造的。一方面真正美味的食材只需最简单的烹饪，另一方面如果连食欲都控制不了，很难做一个上等人。 小时候的我偏执又自负，自认为就是一块无瑕的美玉，饺子这种低级食物不配我去食用。&#xA;我大学毕业一年后，忽然开始爱吃饺子了。&#xA;那是20年一个飘雪的寒冬夜晚，我走进了楼下的一个普通饺子馆，点了一份猪肉白菜馅的饺子。 肉馅入口，味道很鲜美，但对馅类食材的恶心感依然在心头不散。 我强忍着不适继续咀嚼，不知怎么的就开始回想这工作一年多来的种种。 毕业后突发重型痤疮，裸辞三个月在出租屋崩溃，找到新工作后开始脱发&amp;hellip;&amp;hellip;北漂好难。 我觉得生活有些无聊，求而不得已是常态。 小时候的傲气尽数丢失，留下的只有食物的渴望。只因多次尝试后已然知晓，食欲是唯一可满足的欲望。 不知不觉中饺子见底，呷一口酸辣的饺子汤。窗外的雪大了起来，那是我吃过的最美味的饺子。 那天之后，我吃饺子再也没有小时候的恶心感。&#xA;饺子依然不是“干净”的食物，是我脏了，然后和饺子这种食物很搭。 工作一年多来，为了生活四处奔波，早已放弃了小时候的种种原则，甚至要接受那个她不是一个处子之身。 可能是妥协了吧，接受自己的不完美，甚至于接受她的不完美。 我想我明白为什么大人都喜欢吃饺子了。 当生活太过苦涩时，就需要用刺激性的食物来勉励自己生活不全都是苦的。&#xA;希望自己有一天依然可以因为食用饺子而恶心。&#xA;写于一个因吃了海鲜自助火锅而恶心的夜晚，附赠一张表面上很“干净”的截图驱逐一下恶心感。</description>
    </item>
    <item>
      <title>回归笔记的本源</title>
      <link>http://nzooherd.github.io/posts/%E5%9B%9E%E5%BD%92%E7%AC%94%E8%AE%B0%E7%9A%84%E6%9C%AC%E6%BA%90/</link>
      <pubDate>Tue, 07 Sep 2021 21:30:09 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/%E5%9B%9E%E5%BD%92%E7%AC%94%E8%AE%B0%E7%9A%84%E6%9C%AC%E6%BA%90/</guid>
      <description>回归笔记的本源 前言 这是一个笔记软件比笔记多的时代。&#xA;从最初靠笔记发家的 Evernote，到中期的网红软件 Notion，还有最近爆火的 Obsidian。各种新概念也层出不穷，双链，块存储，网状，卢曼卡片盒&amp;hellip;，不少人的知识没有多少，软件却换了一茬又一茬。&#xA;大学开始接触笔记软件的我，当然也属于上文中那些换了一茬又一茬的一员。 市面上所有支持 Vim 模式的软件基本尝了个遍。&#xA;然而当我又一次因为笔记迁移的数据兼容性折腾到半夜时，忽然在想是不是太过于痴迷软件本身，而忘记了笔记的初衷。重新思考之后，我决定放弃软件的形态，以此回归笔记本源。&#xA;经过详细的需求分析与产品调研，并且认真使用了一年时间后，我认为我已经找到了笔记管理的最终形态。下文先回顾我的笔记软件变迁，之后详细介绍我自称为 VSNote 的工具，最后谈一谈我理解的生产力。&#xA;各种Note SimpleNote SimpleNote是我第一款笔记软件。&#xA;那时刚踏入大学不久，受限于繁重的大学课程压力，需要一个简单的工具来记录每天的作业 TODO。&#xA;此时的笔记软件的作用更类似于一个桌面便笺，无需大量的文字编辑工作，SimlpeNote 简洁的 UI 和全平台同步的功能十分切合我的需求。&#xA;WizNote 大三之后，开始为工作做准备。 此时我的笔记内容偏不再仅仅是每日 TODO，开始侧重于复习总结，知识整理等，需要大量的编辑。 SimpleNote 简陋的功能限制了其使用场景。 WizNote 的 Vim 编辑功能吸引了我。&#xA;相比于 SimpleNote，WizNote 是一个真正的知识管理软件，也是在它的陪伴下，18年秋招顺利上岸。&#xA;VNote 步入工作，生活琐事日益繁冗，积累学习亦不可懈怠。 恰巧为知笔记试用期结束，数据无法同步云端，遂寻找一款新的软件来支撑我的需求。&#xA;闲杂摸鱼之际，在 V2EX 发现作者推广这款名叫 VNote 的开源笔记软件。 深入调查一番，发现各方面都比较切合我的使用场景。&#xA;VNote 的一些主要 Feature :&#xA;可选 Vim 编辑模式。 基于 C++ QT 开发，跨平台无性能问题。 无服务端，无需担心数据泄露。 可以无限嵌套的笔记目录。 支持 PlantUML，Mermaid, LaTeX 插件。 主题，样式，快捷键高度可定制。 开源! 用着不爽，自己开发。 虽然 VNote 没有云端同步，但实际 Vnote 的笔记内容完全基于本地文件。只需要同步笔记文件夹，可以保证数据一致性。</description>
    </item>
    <item>
      <title>Artificially create connection timemout</title>
      <link>http://nzooherd.github.io/posts/artifically-create-a-connection-timemout/</link>
      <pubDate>Sat, 19 Jun 2021 12:06:55 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/artifically-create-a-connection-timemout/</guid>
      <description>从三年前第一次接触TCP backlog开始，TCP建连时到底时两个队列还是一个队列就一直作为一个问题存在脑子了，没想到三年过去了才终于搞明白。&#xA;上图摘自&amp;laquo;TCP/IP详解卷1&amp;raquo;关于backlog的描写，我到现在也没有明白这段话想精确表达的含义。&#xA;无论如何，希望大家尽量去读英文书，搜英文资料，避免吃屎。&#xA;原理 首先看一下经典老图， 第一个问题到底是一个队列还是两个队列&#xA;一个队列: 此场景下要将处于SYNC_RECV和ESTABLISHED的状态全部放入其中&#xA;两个队列: SYNC_RECV一个队列，ESTABLISHED一个队列&#xA;准确来说两种实现都是正确的，因为这不属于TCP协议的范畴。&#xA;BSD选择了第一种，当队列满时，仅仅是丢弃收到的SYN，让客户端重试。&#xA;Linux2.2之后选择了第二种，存在两个队列。因此对于绝大多数程序员来说，记住下图就可以应用100%的场景了。&#xA;When SYN Queue is Full&#xA;if net.ipv4.tcp_syncookies=0, 丢弃SYN if net.ipv4.tcp_syncookies=1, if ACP Queue is Full and req_young_len &amp;gt; 1，丢弃SYN。req_young_len是指SYN队列中没有被重传的SYN/ACK pakcet的数量 否则对这个SYNC packet生成syncookies。 When Accept Queue is Full&#xA;if tcp_abort_on_overflow=1, 返回 RST packet，并且从SYN Queue中移除。 if tcp_abort_on_overflow=0, 仅仅标记此连接为acked，并不从SYN Queue中移除。一段时间后，服务端会因为[假装]没有收到ACK而重发SYN+ACK packet. 重现 了解上述原理后，我们只需要将SYN Queue和ACK Queue设置的尽量小，就可以重现Connection Timeout，甚至重现Server discard syn的场景，本文会重现Server discard syn，这也是Connection Timeout的一种。&#xA;设置SYN Queue大小为1 关闭syncookies 设置系统级backlog最大值 打开/etc/sysctl.conf文件，加入以下内容&#xA;net.ipv4.tcp_max_syn_backlog = 1 net.</description>
    </item>
    <item>
      <title>PhotoShop与理科生</title>
      <link>http://nzooherd.github.io/posts/twitter-1398601018691051521/</link>
      <pubDate>Sat, 29 May 2021 12:09:39 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/twitter-1398601018691051521/</guid>
      <description>很久前看李涛的ps教程，越看越觉得不搭，特别是他那一头充满艺术感的长发出现时。&#xA;直到后来在油管上看到一个电子系博士讲ps，我才明白之前的不搭源自一个理工男刻在骨子里的对文科生的鄙视。</description>
    </item>
    <item>
      <title>文字与图片</title>
      <link>http://nzooherd.github.io/posts/twitter-1396001741536063493/</link>
      <pubDate>Sat, 22 May 2021 07:15:46 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/twitter-1396001741536063493/</guid>
      <description>大脑对信息有成瘾性，而思考应该是一个让大脑感到痛苦的行为。&#xA;所以从信息量来看，文字是抽象的，更适合逻辑思考，图片是形象的，更适合感情表达。</description>
    </item>
    <item>
      <title>找回了几年前的博客</title>
      <link>http://nzooherd.github.io/posts/%E6%89%BE%E5%9B%9E%E4%BA%86%E5%87%A0%E5%B9%B4%E5%89%8D%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Tue, 04 May 2021 00:07:38 +0800</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%89%BE%E5%9B%9E%E4%BA%86%E5%87%A0%E5%B9%B4%E5%89%8D%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>不知怎么想的，突然就觉得需要一个写字的地方，于是找回了遗失接近两年的博客。&#xA;换工作的近一年来，着实过的压抑了些。我觉得我成长了，但本质又好像没什么改变，自负到自卑。&#xA;希望这个博客可以让我持续的写下去，写一些自己的东西。&#xA;记录时间。</description>
    </item>
    <item>
      <title>校招总结</title>
      <link>http://nzooherd.github.io/posts/%E6%A0%A1%E6%8B%9B%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 14 Sep 2018 21:57:50 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%A0%A1%E6%8B%9B%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;9.11号 阴&#xA;坐在宿舍的我实在闲的发慌，在这个即将发霉的日子里实在找不到什么来打发时间，极不情愿的打开VS Code来记录一下我的秋招历程。先说结果吧，投了二十来家，挂了许多，放弃了五六家，现在手里面有三，四个意向通知书，估计不会继续投了，毕竟BAT已经全部凉凉! 所以每天做的事情就是混吃等死。&lt;/p&gt;</description>
    </item>
    <item>
      <title>美团实习小记</title>
      <link>http://nzooherd.github.io/posts/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Fri, 20 Jul 2018 21:44:15 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E7%BE%8E%E5%9B%A2%E5%AE%9E%E4%B9%A0%E5%B0%8F%E8%AE%B0/</guid>
      <description>&lt;p&gt;3.12~7.20，四个月左右的美团实习今天就结束了，细细回想工作时的一点一滴，想要说些什么，确不知从何说起。&lt;/p&gt;&#xA;&lt;p&gt;这些日子，在美团AI孵化器语音组负责后台开发工作，可以说是见证了一个后台服务系统的重构-&amp;gt;推到-&amp;gt;重新设计-&amp;gt;逐渐成形的全过程，在完成第一个可用版本之后，离职滚蛋，也是没有任何遗憾了。从这段实习中，确实学到了非常非常多的东西，强烈推荐在本科期间一定要实习一下，尤其是在大公司里面，你会发现许多东西其实并不是你想象的样子的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>谈谈RPC</title>
      <link>http://nzooherd.github.io/posts/%E8%B0%88%E8%B0%88rpc/</link>
      <pubDate>Tue, 10 Jul 2018 21:29:54 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E8%B0%88%E8%B0%88rpc/</guid>
      <description>&lt;p&gt;RPC(Remote Procedure Call)字面意思就是远程过程调用，RPC框架的作用就是将远程过程调用封装成本地过程调用。所以Rpc-Framework要封装的就是以下这些东西。&#xA;&lt;img src=&#34;http://nzooherd-picture-bed.oss-cn-beijing.aliyuncs.com/20171102105005322.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在美团实习用到了Thrift，Thrift作为一个跨语言RPC，美团内部通过jar包将其接入Spring，屏蔽了复杂的Thrift连接操作，而且RPC框架可以很非常方便的将一个单机服务转变为分布式架构的。&#xA;不由得让我想起了刚来美团时接手的一个纯C写的分段式语音传输系统，Socket通信加上各种内存复制着实让人恶心。用Java重构后，加上Thrift框架，仅仅两个实习生就多快好省的搞好了这个分布式系统。RPC的强大可见一斑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>诡异的Integer</title>
      <link>http://nzooherd.github.io/posts/%E8%AF%A1%E5%BC%82%E7%9A%84integer/</link>
      <pubDate>Sun, 01 Jul 2018 22:39:03 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E8%AF%A1%E5%BC%82%E7%9A%84integer/</guid>
      <description>&lt;h2 id=&#34;一个常见的面试题&#34;&gt;一个常见的面试题&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Java语言实现两个线程交替输出1,2。&#xA;看到这个题就想起了生产者-消费者，进而想到了Synchorinzed, wait, notify。下面是我要写的代码&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>JDK动态代理</title>
      <link>http://nzooherd.github.io/posts/jdk%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</link>
      <pubDate>Sun, 20 May 2018 10:07:45 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/jdk%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</guid>
      <description>&lt;p&gt;最近复习了一下JDK自带的动态代理，在Java技术中，和动态代理连接最紧密的就是Spring中的AOP，所谓的面向切面技术。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ZAB协议和Zookeeper分布式服务框架</title>
      <link>http://nzooherd.github.io/posts/zab%E5%8D%8F%E8%AE%AE%E5%92%8Czookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Sun, 13 May 2018 21:20:52 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/zab%E5%8D%8F%E8%AE%AE%E5%92%8Czookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/</guid>
      <description>&lt;p&gt;What is ZooKeeper?&#xA;ZooKeeper是一个开放源代码的分布式协调服务,出自&amp;laquo;分布式一致性原理与实践&amp;raquo;。对于像我这样的新手来说，这句话就是在扯淡。&#xA;还记得当初刚学Spring，网上各种都在说的Spring的IOC,AOP的优越，但是讲半天也没有说明Spring到底是做什么的。在&amp;laquo;Spring实战&amp;raquo;中，开门见山的讲明了Spring就是用来解隅的。带着这个目的去学习Spring，就有了方向，你就会逐渐明白Spring如何解隅，IOC和AOP。这就是好书给人的感觉。本文适合菜鸟，高手止步。&lt;/p&gt;</description>
    </item>
    <item>
      <title>分布式基础</title>
      <link>http://nzooherd.github.io/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 09 May 2018 23:31:48 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;h2 id=&#34;cap&#34;&gt;CAP&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Consistency&#xA;当一个系统在数据一致的状态下执行更新操作后，应该保证系统的数据处于一致的状态。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Availability&#xA;提供的服务必须处于可用状态。两个维度，有限时间内和返回结果&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Partition tolerance&#xA;分布式系统在遇到任何网络分区故障的时候，仍然需要能够保证对外提供满足一致性和可用性的服务。&#xA;网络分区是指在分布式系统个中，不同的节点分布在不同的子网络，一些特殊原因导致子网络之间网络不联通，各个系统的网络环境被切分成了若干个孤立区域。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>统计学习方法(1)-感知机</title>
      <link>http://nzooherd.github.io/posts/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A01-%E6%84%9F%E7%9F%A5%E6%9C%BA/</link>
      <pubDate>Wed, 04 Apr 2018 22:02:05 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A01-%E6%84%9F%E7%9F%A5%E6%9C%BA/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://nzooherd-picture-bed.oss-cn-beijing.aliyuncs.com/1009183469.jpg&#34; alt=&#34;&#34;&gt;&#xA;初雪 2018-4-4 晚&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;找了近一个月的时间都没有找到一款合适的笔记，最终我选择了Visual Code + Vim + Markdown + Mega。笔记内容链接在个人描述页面&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;忽然想学一波大数据方面的东西，但是我不想搞人工智能，例如NLU, CV等，这些对于人来说很简单的事。关于人工智能，我仍然坚持当前基于统计的方法无法实现真正的人工智能，不如花时间来玩一玩大数据的东西。以下内容参考李航的&amp;laquo;统计学习方法&amp;raquo;，重在理解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Something about my blog</title>
      <link>http://nzooherd.github.io/posts/something-about-my-blog/</link>
      <pubDate>Sun, 25 Mar 2018 23:08:40 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/something-about-my-blog/</guid>
      <description>&lt;p&gt;最近没怎么写博客，想来想去，一是因为懒，二是因为实在没有什么可写。当初建这个博客的初衷就是为了记录一些关于技术的钻研，一些成长的经历，一些生活的感悟等真正属于自己的东西。现在看看写的一些文章，感悟倒是不少，关于技术内容的干货却没有几篇，违反了建博客的初衷。&lt;/p&gt;</description>
    </item>
    <item>
      <title>美团面试小记</title>
      <link>http://nzooherd.github.io/posts/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Tue, 06 Mar 2018 20:44:44 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E7%BE%8E%E5%9B%A2%E9%9D%A2%E8%AF%95/</guid>
      <description>&lt;p&gt;最近同学帮我内推了美团，本来想投的是Java后台研发，阴差阳错之间帮我推到了一个AI语言部门，昨天面试了一下，问的比较浅，但是还是有许多问题回答的不好，简单记录了一下。现在还不知道结果，&lt;del&gt;最蛋疼的是同学无意间帮你问了一下结果，面试官说还行，结果最后被据了。&lt;/del&gt;&#xA;&lt;img src=&#34;http://img.youbiaoqing.com/u/ed7b0b1e2446cf109526928a2ac11ad7.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL索引</title>
      <link>http://nzooherd.github.io/posts/mysql%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Sun, 25 Feb 2018 10:13:53 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/mysql%E7%B4%A2%E5%BC%95/</guid>
      <description>&lt;p&gt;在阅读&amp;laquo;高性能MySQL&amp;raquo;时，开始就被灌输了一个索引很重要的概念。最近在读第五章，&amp;ldquo;创建高性能的索引&amp;rdquo;，用于记录。&lt;/p&gt;&#xA;&lt;h2 id=&#34;索引基础&#34;&gt;索引基础&lt;/h2&gt;&#xA;&lt;p&gt;理解索引最简单的办法就查字典，小时候查汉语大词典就是最典型的索引思想。通过索引可以将查询的效率提高几个数量级。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的2017</title>
      <link>http://nzooherd.github.io/posts/%E6%88%91%E7%9A%842017/</link>
      <pubDate>Thu, 15 Feb 2018 18:04:20 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%88%91%E7%9A%842017/</guid>
      <description>&lt;p&gt;2017就这样在外面的鞭炮声中结束了，细细品味这一年了，发现自己好像确实没干什么，或许我在逐渐的接受自己也是个平凡人的事实。&lt;/p&gt;</description>
    </item>
    <item>
      <title>杂谈设计模式</title>
      <link>http://nzooherd.github.io/posts/%E6%9D%82%E8%B0%88%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 03 Feb 2018 23:16:13 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%9D%82%E8%B0%88%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;最近在读程杰的&amp;laquo;大话设计模式&amp;raquo;，学了十几个设计模式后感觉每个都很相似，下面虽然写了一堆，但是要真正理解还有写代码才可以，实践是检验真理的唯一标准。&lt;/p&gt;</description>
    </item>
    <item>
      <title>UML类图</title>
      <link>http://nzooherd.github.io/posts/uml%E7%B1%BB%E5%9B%BE/</link>
      <pubDate>Wed, 31 Jan 2018 22:29:29 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/uml%E7%B1%BB%E5%9B%BE/</guid>
      <description>&lt;p&gt;最近在读大话设计模式，其中的UML类图尚不熟悉，特此记录。&lt;/p&gt;</description>
    </item>
    <item>
      <title>人工智能</title>
      <link>http://nzooherd.github.io/posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</link>
      <pubDate>Sun, 07 Jan 2018 20:57:11 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</guid>
      <description>&lt;p&gt;-What do you believe in, David?     -Creation.           &amp;mdash;-&amp;laquo;普罗米休斯: 契约&amp;raquo;&#xA;还记得当初用C写下的第一行代码，Hello World。大概过了两年，我才明白这个两个单词的真正含义。&lt;strong&gt;当程序输出Hello World的刹那，意味着她有了生命。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JAVA泛型</title>
      <link>http://nzooherd.github.io/posts/java%E6%B3%9B%E5%9E%8B/</link>
      <pubDate>Sat, 23 Dec 2017 12:26:09 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/java%E6%B3%9B%E5%9E%8B/</guid>
      <description>&lt;p&gt;最近在看Java源码，在Java容器类中所有容器都用到了泛型，然而Java中的泛型实际上是一种伪泛型。记录一下Java中泛型的实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>中庸之道</title>
      <link>http://nzooherd.github.io/posts/%E4%B8%AD%E5%BA%B8%E4%B9%8B%E9%81%93/</link>
      <pubDate>Sat, 09 Dec 2017 20:00:10 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E4%B8%AD%E5%BA%B8%E4%B9%8B%E9%81%93/</guid>
      <description>&lt;p&gt;世界是多维的，所以有了高斯分布。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java NIO易错点</title>
      <link>http://nzooherd.github.io/posts/java-nio%E6%98%93%E9%94%99%E7%82%B9/</link>
      <pubDate>Wed, 29 Nov 2017 19:22:03 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/java-nio%E6%98%93%E9%94%99%E7%82%B9/</guid>
      <description>&lt;p&gt;最近在和同学写一个Android端的类微信项目，不过非常简单，只有添加好友，设置备注，通话等功能。我主要负责服务器端的开发，在开发过程中，使用了Spring框架和Java NIO。有些东西，确实不写代码根本就学不会，在学习过程中，发现Java NIO中的一些易错点，特此记录，以备查询。(可能会不定时更新)&lt;/p&gt;</description>
    </item>
    <item>
      <title>记一次诡异的Bug</title>
      <link>http://nzooherd.github.io/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%AF%A1%E5%BC%82%E7%9A%84bug/</link>
      <pubDate>Tue, 14 Nov 2017 09:07:38 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%AF%A1%E5%BC%82%E7%9A%84bug/</guid>
      <description>&lt;p&gt;故事是这样的，前几天固态硬盘到了之后决定重装系统，电脑换上固态后装好Linux后，直接将原来机械硬盘中的JDK, Tomcat, Intellij IDEA拷贝过来，简单的配置了一下环境变量，java -version没有任何问题，于是就开始修改之前的LetChat源文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JVM中的常用参数</title>
      <link>http://nzooherd.github.io/posts/jvm%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</link>
      <pubDate>Mon, 30 Oct 2017 21:58:52 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/jvm%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</guid>
      <description>&lt;p&gt;不得不说&amp;laquo;深入理解Java虚拟机&amp;raquo;真的是一本很神奇的书籍，每次读都有一种醍醐灌顶的效果，像这种书不是读一遍放下就可以了，而是要放在手边，随时查阅，直到真正的融会贯通，达到人书合一的效果。&#xA;这是一篇记录JVM中常用参数的帖子，可能会不定时更新。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaWeb和SSM</title>
      <link>http://nzooherd.github.io/posts/javaweb%E5%92%8Cssm/</link>
      <pubDate>Sat, 28 Oct 2017 12:21:40 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/javaweb%E5%92%8Cssm/</guid>
      <description>&lt;p&gt;近一个月的时间都在做一个B/S架构的在线聊天工具，从最初的的命令行再到Jsp最后用SSM框架重构，到目前就先告一段落吧，记录一下学习过程中的感想，以便查阅。&lt;/p&gt;</description>
    </item>
    <item>
      <title>通过ngrok实现内网穿透</title>
      <link>http://nzooherd.github.io/posts/%E9%80%9A%E8%BF%87ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Fri, 20 Oct 2017 22:41:44 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E9%80%9A%E8%BF%87ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
      <description>&lt;h3 id=&#34;通过ngrok实现ssh连接本机电脑&#34;&gt;通过ngrok实现ssh连接本机电脑&lt;/h3&gt;&#xA;&lt;p&gt;从树莓派开始就一直想着有没有一种方法可以通过外网ssh连接内网中的树莓派，之前知道一个大概的思路，就是通过花生壳的类似内网穿透的服务。然而好几次尝试都失败了，最后直接知乎，搜到了ngrok这个神器，一次搞定。不得不感叹一下国外的开源环境确实比国内好很多，一些用中文怎么搜索都找不到答案的问题，换成英文搜索就会发现，老外早就给你写好解决办法了，就看你会不会用Google了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于c/s和b/s架构</title>
      <link>http://nzooherd.github.io/posts/%E5%85%B3%E4%BA%8Ec-s%E5%92%8Cb-s%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Mon, 18 Sep 2017 19:25:55 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E5%85%B3%E4%BA%8Ec-s%E5%92%8Cb-s%E6%9E%B6%E6%9E%84/</guid>
      <description>&lt;p&gt;从上学期期末开始就尝试写一个聊天工具，从最开始的Java IO，由于Java代码是运行在JVM上的，一方面即时是一个简单的客户端程序，同样会占用不少的内存，另一方面Java本身就不适合写客户端程序，让用户装JVM这件事本事就很扯淡。为了解决内存占用问题，这学期开始将服务器端的代码改为了Java NIO，通过NIO中的selector(轮询)来减少服务器端CPU和内存占用，在完成一个最初的model后，就开始尝试将其改为B/S架构的，随即发现不少问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>大二暑假</title>
      <link>http://nzooherd.github.io/posts/%E5%A4%A7%E4%BA%8C%E6%9A%91%E5%81%87/</link>
      <pubDate>Mon, 21 Aug 2017 10:50:21 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E5%A4%A7%E4%BA%8C%E6%9A%91%E5%81%87/</guid>
      <description>大二暑假马上也要结束了。细细想来，果然是如同往日的假期一样，计划做了一项又一项，然而呢。自大让我觉得我什么都可以做，幸亏懒惰阻止了我。 如果说真的完成了什么的话，应该就是驾照了，一个本应该在高考完完成的事情，却拖到了现在。Tcp/Ip协议就是一个坑，这种东西一个人很难学下去，如果只是看书的话，绝对是看完一章忘一章。还是一句老话，学而不思则罔，思而不学则殆。假期买了不少书，Unix环境高级编程和Unix网络编程就是内功心法，学会之后可以打通任督二脉，然而只有先打通任督二脉才可以学得会，可怜我一个Java狗怎么都看不进去。此外还读了一点淘宝架构组曾宪杰大大的《大型网站系统与Java中间件实践》,了解大型网站架构的大概。除此之外，好像真的没有什么了。 成功有两种方法，一种是看别人成功，一种是看别人失败。看到昔日的同窗好友如今在各自的岗位上渐行渐远，心里没有些想法是不可能的。浮躁的社会，一句诗来结尾:我自横刀向天笑，去留肝胆两昆仑。</description>
    </item>
    <item>
      <title>粗谈Tcp/Ip协议</title>
      <link>http://nzooherd.github.io/posts/%E7%B2%97%E8%B0%88tcp-ip%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Thu, 06 Jul 2017 10:37:18 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E7%B2%97%E8%B0%88tcp-ip%E5%8D%8F%E8%AE%AE/</guid>
      <description>最近在学习Tcp-Ip协议，这种东西怎么说，不知道学哪，不知道学完有什么用，不知道哪些是重点，而且对于各个协议的细节，根本记不住。缕一下，方便以后学习。 首先通常所说的Tcp-ip协议是一个协议簇，不仅有Tcp-Ip协议。从计算机网络中的五个分层来说，Tcp-Ip协议簇在各个层次都有不同的协议，应用层的http,ftp等，传输层的tcp,udp,网络层的ip，链路层的apr协议，还有物理层的协议等。计算机网络作为一个系统，不仅要有硬件，还要有软件。就比如一条高速公路，公路，服务区，收费站等就是硬件，汽车需要遵守的交通规则就是软件，即我们所说的Tcp-Ip协议，两者缺一不可。</description>
    </item>
    <item>
      <title>IO多路复用</title>
      <link>http://nzooherd.github.io/posts/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link>
      <pubDate>Thu, 06 Jul 2017 10:36:54 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid>
      <description>&lt;h3 id=&#34;阻塞同步非阻塞异步&#34;&gt;阻塞，同步，非阻塞，异步&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;同步和异步&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;同步和异步关注点是&lt;em&gt;消息通信机制&lt;/em&gt;，同步模型下消息的处理者主动去等待消息的提供者，异步模型下由消息提供者来通知消息处理者。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;阻塞和非阻塞&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;阻塞和非阻塞关注的是&lt;em&gt;消息处理者在等待调用结果消息结果时的状态&lt;/em&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>垃圾收集</title>
      <link>http://nzooherd.github.io/posts/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/</link>
      <pubDate>Mon, 12 Jun 2017 17:38:12 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/</guid>
      <description>&lt;h3 id=&#34;垃圾收集&#34;&gt;垃圾收集&lt;/h3&gt;&#xA;&lt;p&gt;未能释放已分配的块是一种&lt;strong&gt;编程错误&lt;/strong&gt;。如下代码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;void garbage()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;int *p = (int *)malloc(15213);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    return ;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;程序员忘记释放p，导致p占用本来可以满足后面分配请求的堆空间。&#xA;&lt;em&gt;垃圾收集器&lt;/em&gt;(garbage collector)是一种动态存储分配器，自动释放不再需要的称为&lt;em&gt;垃圾&lt;/em&gt;的块，自动回收堆存储过程叫做&lt;em&gt;垃圾收集&lt;/em&gt;，垃圾收集器定期识别垃圾块，并相应的调动free，将这些块放回到空闲链表中。&#xA;我们主要讨论标记清除法&lt;/p&gt;</description>
    </item>
    <item>
      <title>随笔</title>
      <link>http://nzooherd.github.io/posts/%E9%9A%8F%E7%AC%94/</link>
      <pubDate>Mon, 12 Jun 2017 15:59:45 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E9%9A%8F%E7%AC%94/</guid>
      <description>&lt;h3 id=&#34;大二下总结&#34;&gt;大二下总结&lt;/h3&gt;&#xA;&lt;p&gt;发现时间越走越快，不知为何的开始惧怕衰老，在本该放飞自我的年龄里。前几天高考的时候，突然意识到自己已经大二末了，然而两年前自己高考时的场景却仍然清晰的刻在脑海中，明年，00后都要上大学了吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>git命令总结</title>
      <link>http://nzooherd.github.io/posts/git%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 02 Apr 2017 16:36:01 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/git%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;Java选修课上，老师建议采用git来管理自己的代码．其实很久以前就了解到这个linus大神编写的版本控制工具,也看过一些它的命令，现在抽个时间整理（抄袭）一下，大部分来自阮一峰大大．&lt;/p&gt;</description>
    </item>
    <item>
      <title>xx-net网络分享</title>
      <link>http://nzooherd.github.io/posts/xx-net%E7%BD%91%E7%BB%9C%E5%88%86%E4%BA%AB/</link>
      <pubDate>Mon, 06 Mar 2017 20:53:53 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/xx-net%E7%BD%91%E7%BB%9C%E5%88%86%E4%BA%AB/</guid>
      <description>&lt;p&gt;趁着新学期开学的这段时间，抽时间搞了搞寒假遗留的东西。&lt;/p&gt;&#xA;&lt;h3 id=&#34;first&#34;&gt;First&lt;/h3&gt;&#xA;&lt;p&gt;第一件事就是树莓派，一直想着将树莓派刷成openwrt固件，最终在我的无限努力下，我完成了目标，尴尬的却发现根本不会使用，wan口和lan口完全混杂，最后只能放弃将树莓派当路由器的想法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>年终总结</title>
      <link>http://nzooherd.github.io/posts/2016%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 30 Dec 2016 15:14:45 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/2016%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;2016年终总结&#34;&gt;2016年终总结&lt;/h3&gt;&#xA;&lt;h4 id=&#34;ipv6&#34;&gt;ipv6&lt;/h4&gt;&#xA;&lt;p&gt;一年下来，对于ipv6的一些研究，也许就是今年最大的收获了。现在想想，还清晰的记得突然之间就登录了谷歌账号的惊讶。随后大概一个月左右的时间真的有一种废寝忘食的感觉。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ipv6网络下观看清华iptv</title>
      <link>http://nzooherd.github.io/posts/ipv6%E7%BD%91%E7%BB%9C%E4%B8%8B%E8%A7%82%E7%9C%8B%E6%B8%85%E5%8D%8Eiptv/</link>
      <pubDate>Mon, 26 Dec 2016 11:01:34 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/ipv6%E7%BD%91%E7%BB%9C%E4%B8%8B%E8%A7%82%E7%9C%8B%E6%B8%85%E5%8D%8Eiptv/</guid>
      <description>&lt;h3 id=&#34;深夜看球&#34;&gt;深夜看球&lt;/h3&gt;&#xA;&lt;p&gt;在校园网环境下，ipv6不仅不限制流量，晚间还不断网，简直就是为晚间看球赛而生的。于是想到了我理的iptv。我理的iptv应该是走的ipv6通道，但是夜晚却不能使用。后来就在ipv6资源中看到了北邮iptv和清华iptv。最终当然是选择清华iptv了，五道口财大气粗，基本上各卫视都有高清，这带宽不用就是浪费。&lt;br&gt;&#xA;1 首先就是确定自己有ipv6地址咯，Linux和Mac 终端里面&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping6 2001:4860:4860::8888&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;windows 将ping6 改为 ping -6 收到回复就说明可以了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>无题</title>
      <link>http://nzooherd.github.io/posts/%E6%97%A0%E9%A2%98/</link>
      <pubDate>Wed, 21 Dec 2016 23:26:19 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%97%A0%E9%A2%98/</guid>
      <description>半年 大概两个月前，没错我又重装系统了，于是之前写的几篇杂文都没了，然后用谷歌快照查看之前的网站，保留了两三篇文章。 一直都在想着抽时间将这个博客重新规划一下，然而人的惰性实在是个难以琢磨的东西，杂七杂八的东西一拖起来就没完。终于在今天将之前的几篇复制粘贴了一下，写了一下这个说明。&#xA;拖延症实在是个可怕的东西。&#xA;突然发现在大学里面总是不断的在做自我规划，不断的积累书单，然而真正按 照计划做到的,真正仔细研读的书籍，确实少之又少。想想从大一开始不断计划的事情&#xA;计算机底层 书法 python爬虫 算法 Leetcode 要学习的语言：JavaScript,Python,Bash,C++,sql,php Vim 最后还有半多G的pdf书单 其中真正达到目的的几乎没有，要不就是没开始，要不就是在准备开始的路上。如今大二上也马上就要过去了，大学已经过去一半了，却忽然发现貌似什么都没有学到，要在接下去的一年半时间让自己真正成长起来。&#xA;衣带渐宽终不悔，为伊消得人憔悴。</description>
    </item>
    <item>
      <title>acm有感</title>
      <link>http://nzooherd.github.io/posts/acm%E6%9C%89%E6%84%9F/</link>
      <pubDate>Fri, 16 Dec 2016 15:44:23 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/acm%E6%9C%89%E6%84%9F/</guid>
      <description>一个月的暑假集训就这样结束了。&#xA;遗憾是有的，不过不是那些没A的题，而是自己先前未曾意识到ACM的精髓。也许时间证明了我不是ACM之人，我想说，ACM之中有太多的巧合和不确定，想比而言，我更想静静的思考一种算法，而不是为了一些格式，精度等等白白的浪费时间，也许是不屑于吧，又或许这种说法只是为了满足一下虚荣。&#xA;另一方面，关于刷题 ，难道我们做这些题就是为了要AC吗，大可以思考两三分钟直接去网上找题解，问同学，甚至照着代码来一遍，然而呢，记住了这个题，其他的题呢，记住了这个技巧，其他的技巧呢，A了这么多题，遇到没见过的，不是仍然不会。一个人一生创造一种算法就足以被后人记住，但是我们做的仅仅是模仿了前人的成果，甚至模仿都算不上，只是套用，仅此而已。做题不在于你A了多少道题，需要的仅仅只是你的思考，不管道路的错误还是正确，这些都会在未来的某天报答给你。学习没有错，然而对于一个在未来要做到整个世界都未曾达到的境界的人，一味的学习并没有太大的用，在将来，不会有人给你指导，因为你是探索者。有些路，注定要自己走，有些事，注定要亲自去做。&#xA;不要随便接受他人的想法，就这样。</description>
    </item>
    <item>
      <title>网易云有感</title>
      <link>http://nzooherd.github.io/posts/%E7%BD%91%E6%98%93%E4%BA%91%E6%9C%89%E6%84%9F/</link>
      <pubDate>Fri, 16 Dec 2016 15:40:37 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E7%BD%91%E6%98%93%E4%BA%91%E6%9C%89%E6%84%9F/</guid>
      <description>前不久网易云音乐出了linux版，折腾了几分钟就装好了，终于可以愉快的边撸边听了。额，撸代码。&#xA;对于我来说，网易在中国的互联网圈里应该是我最尊敬的一家公司了，现在想起来玩的第一款真正意义上的游戏就是网易的梦幻，也是不短了，从打游戏都要变为做游戏了。 网易云音乐相对于其他的音乐软件来说很晚的，然而网易云却真的可以在一片红海中杀出来，如今的音乐圈应该是网易云音乐，qq音乐，虾米音乐三足鼎力了，没有百度，也是呵呵。网易云音乐如此优秀并不是只靠天时就可以的，以社交关系作为入口真是打到了腾讯的家门口，而且社交方面比qq音乐不知强哪里去了。歌曲评论功能真是让人又爱又恨啊。本想边听歌边复习，然而不知不觉中又刷了大半个评论区。。。&#xA;网易云音乐出linux版了，不少产品做出来喜了大众的心，然而哪家公司又真正考虑到做产品的程序员了呢，Linux版实在是为程序猿量身订做。网易云音乐有一点做的还是让我挺难以理解的，在它的登录选项中，最后一个才是选择使用网易邮箱登录，对于一家公司来说，推销自己，把自己的帐号放第一位不应该是最大正确的事么？难道仅仅是因为微信帐号较网易邮箱更广泛？(亦或是我想多了)但或许正是因为这种一个个的小细节才磨出了网易云音乐这个优秀的产品吧。&#xA;听闻在网易公司，如果你有好的想法，大可以潇洒的走进丁磊的办公室，扔一本商业计划书，然后，或许你就可以当个CEO了。有谷歌的感觉哦。以前看过一片文章说网易是中国互联网圈子里利润最高的公司，没有之一。(黑人问号脸) 也许静下来，用心打磨一件产品是最好的道路。</description>
    </item>
    <item>
      <title>浏览器有感</title>
      <link>http://nzooherd.github.io/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%9C%89%E6%84%9F/</link>
      <pubDate>Fri, 16 Dec 2016 15:15:17 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%9C%89%E6%84%9F/</guid>
      <description>小学期是真忙。&#xA;突然想谈一些对网络浏览器的看法。&#xA;先说ie吧，这款浏览器被誉为最适合用来下载其他的浏览器的浏览器(滑稽)。 现在的chrome可以说是风光无限，牢牢占据第一的位置，firefox也应该有不错的使用率，只不过相对于以前来说少了很多。正所谓，无插件，不神器。毕竟我编辑这篇文章用的应用就是一个chrome应用。其余的还有苹果的Safari,和微软的edge，这四种浏览器应该是使用不同的内核，safari和edge相对于前两个来说，市场占有率应该就小了很多了。&#xA;我在这里想提的则是神器的国产双核浏览器，这些推动中国市场发展的山寨产品，最典型的就是qq浏览器，360安全浏览器和uc浏览器。虽然是山寨，但是在chromium强大的内核下加上ie内核，再加上上一些其他的微小创新，例如各种皮肤，状态栏，侧边栏等，可以说是站在巨人的肩膀上。我，最终还是放弃了windows下的chrome，屈服在360的淫威下，没办法，360浏览器的edge皮肤简直就是绝配win10。相信不仅我，还有许多人因为一些小小的不同选择这些国产双核。&#xA;对于360来说，有哪些创新吗，内核chromium的，皮肤edge的，没有自己的，然而创新就是吧chromium的内核和edge的皮肤整合起来，这是一种生存的态度。如今的360远没有实力去开发一款自己内核的浏览器，借鉴他人所长，再加上一些微小的创新，的确，这对于现在的360公司来说足够了。细细想想，当初的腾讯不也就是这样吗，如果弱小的时候，没有站在巨人的肩膀上，从哪里来如今的企鹅帝国。 但也正因如此，我就得360安全浏览器并不能走的太远，上不了台面。</description>
    </item>
    <item>
      <title>火影完结感</title>
      <link>http://nzooherd.github.io/posts/%E7%81%AB%E5%BD%B1%E5%AE%8C%E7%BB%93%E6%84%9F/</link>
      <pubDate>Wed, 30 Nov 2016 14:16:36 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/%E7%81%AB%E5%BD%B1%E5%AE%8C%E7%BB%93%E6%84%9F/</guid>
      <description>&lt;p&gt;火影中的那些&lt;/p&gt;&#xA;&lt;p&gt;半个月的时间刷完了火影，一方面是高中某同窗的再三请求，另一方面也许是真的想感受一下火影的魅力。终于在今日完结了这部十余年的著作，略微带点惭愧，其中的许多细节都未能好好体会，再加上同学剧透等等。。。虽然想说些什么，却又不知道从何说起。&lt;/p&gt;&#xA;&lt;p&gt;1“自来也豪杰物语…就这样结束，也还不错。井底之蛙，终归大海…之卷吗？哈哈，还挺伟大的呢…了不起啊。嗯…差不多要收笔了。哦哦，对了，续传的题目叫什么好呢？对啊…旋涡鸣人物语…挺好…就这个了.”&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;只有自来也，即使我那同学早早的剧透了自来也的死亡，但是在自来也死时真的有一种悲伤无法言语，&lt;br&gt;&#xA;在大蛇丸误入歧途叛逃木叶后，因为内疚没有将其劝会，火影也不当了，倾其一生。最令命运捉弄的是&lt;br&gt;&#xA;死在了自己抚养的孤儿手上。记忆中仍然清晰的浮现这夕阳下自来也将冰棍一分为二的那一幕。我最爱的&lt;br&gt;&#xA;自来也。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;2.原谅我吧佐助，这是最后一次了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;鼬神，关于他我不想多提，在知道真相的那一刹那，任何言语都是空白的，鼬对二柱子的爱不需要任何的解释。&lt;br&gt;&#xA;鼬一个人选择背负木叶和宇智波一族的黑暗，即便是死前，也要将一切都深埋随着自己的死亡而深埋地下。全&lt;br&gt;&#xA;木叶人都欠鼬一个火影。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;3.以前的我想成为风，想转动那风车但现在，等待那不知从和而来的风让我欢呼雀跃。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hello World</title>
      <link>http://nzooherd.github.io/posts/hello-world/</link>
      <pubDate>Sun, 30 Oct 2016 15:14:45 +0000</pubDate>
      <guid>http://nzooherd.github.io/posts/hello-world/</guid>
      <description>前前后后折腾了两天，总算将这个博客弄了个大概。有些人就是喜欢折腾，发现自己就是这种人。从来没写过博客，然而在那次误入学长的博客后却深深的陷入其中。为什么你要写博客，这是之后看到的一篇写到心里的文章，博客时代远远离去，既然生不逢时，那就逆流而上。不知道为什么，就是感觉想写点东西了，不为证明什么。认识自己。既然选择了开始，就要一路走下去。&#xA;markdown大概看了一点，用最经典的&amp;quot;Hello world&amp;quot;向程序员致敬。&#xA;#include &amp;lt;stdio.h&amp;gt; int main() { printf(&amp;#34;Hello world!\n&amp;#34;); return 0; } </description>
    </item>
  </channel>
</rss>
